resource "local_file" "inventory" {
  content = <<-DOC
    # Ansible inventory containing variable values from Terraform.
    # Generated by Terraform.
    # ## Configure 'ip' variable to bind kubernetes services on a
    # ## different ip than the default iface
    # ## We should set etcd_member_name for etcd cluster. The node that is not a etcd member do not need to set the value, or can set the empty string value.
    [all]
    node1 ansible_host=${yandex_compute_instance.k8s-cluster[0].network_interface.0.nat_ip_address}  ip=${yandex_compute_instance.k8s-cluster[0].network_interface.0.ip_address} ansible_user=centos
    node2 ansible_host=${yandex_compute_instance.k8s-cluster[1].network_interface.0.nat_ip_address}  ip=${yandex_compute_instance.k8s-cluster[1].network_interface.0.ip_address} ansible_user=centos
    node3 ansible_host=${yandex_compute_instance.k8s-cluster[2].network_interface.0.nat_ip_address}  ip=${yandex_compute_instance.k8s-cluster[2].network_interface.0.ip_address} ansible_user=centos
    cp1 ansible_host=${yandex_compute_instance.k8s-cluster[0].network_interface.0.nat_ip_address}  ip=${yandex_compute_instance.k8s-cluster[0].network_interface.0.ip_address} etcd_member_name=etcd1 ansible_user=centos
    cp2 ansible_host=${yandex_compute_instance.k8s-cluster[1].network_interface.0.nat_ip_address}  ip=${yandex_compute_instance.k8s-cluster[1].network_interface.0.ip_address} etcd_member_name=etcd2 ansible_user=centos

    # ## configure a bastion host if your nodes are not directly reachable
    # [bastion]
    # bastion ansible_host=x.x.x.x ansible_user=some_user

    [kube_control_plane]
    cp1
    cp2

    [etcd]
    cp1
    cp2

    [kube_node]
    node1
    node2
    node3

    [calico_rr]

    [k8s_cluster:children]
    kube_control_plane
    kube_node
    calico_rr

    DOC
  filename = "../ansible/inventory"

  depends_on = [
    yandex_compute_instance.k8s-cluster
  ]
}

resource "null_resource" "debug_inventory" {
  provisioner "local-exec" {
    command = "cat ../ansible/inventory"
  }

  depends_on = [
    local_file.inventory
  ]

  triggers = {
      always_run = "${timestamp()}"
  }
}
